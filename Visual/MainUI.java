package Visual;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.FlowLayout;
import javax.swing.*;
import javax.swing.border.BevelBorder;

import Code.Controleur;
import Code.EtatRoute;
import Code.Route;

import java.io.IOException;
import java.util.ArrayList;
import java.io.*;
import javax.imageio.*;

/**
 * @author lsfez
 */
public class MainUI extends JFrame {

	/**
	 * Creates new form
	 */
	public MainUI() {
		super("App");
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		try {
			setContentPane(new JLabel(new ImageIcon(ImageIO.read(new File("Visual/Images/interface.jpg")))));

		} catch (IOException e) {
			e.printStackTrace();

		}
		this.setLayout(new FlowLayout());
		this.setResizable(false);
		this.pack();
		this.setVisible(true);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		Debuter = new JLabel();
		Redemarrer = new JLabel();
		jTextField1 = new JTextField();
		jTextField2 = new JTextField();
		Congestion = new JLabel();
		Fluide = new JLabel();
		GH = new JLabel();
		HD = new JLabel();
		CD = new JLabel();
		BC = new JLabel();
		BG = new JLabel();
		CH = new JLabel();
		AG = new JLabel();
		AB = new JLabel();
		FE = new JLabel();
		AF = new JLabel();
		GF = new JLabel();
		HE = new JLabel();
		ED = new JLabel();
		nextStep = new JLabel();
		face_BG = new JLabel();
		face_AG = new JLabel();
		face_AG1 = new JLabel();
		face_BG1 = new JLabel();
		face_AB = new JLabel();
		face_AB1 = new JLabel();
		face_AF1 = new JLabel();
		face_AF = new JLabel();
		face_BC = new JLabel();
		face_BC1 = new JLabel();
		face_GH1 = new JLabel();
		face_GH = new JLabel();
		face_CD = new JLabel();
		face_CD1 = new JLabel();
		face_HD1 = new JLabel();
		face_HD = new JLabel();
		face_FE1 = new JLabel();
		face_FE = new JLabel();
		face_CH1 = new JLabel();
		face_ED1 = new JLabel();
		face_ED = new JLabel();
		face_CH = new JLabel();
		face_HE = new JLabel();
		face_HE1 = new JLabel();
		face_GF = new JLabel();
		face_GF1 = new JLabel();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		Debuter.setHorizontalAlignment(SwingConstants.CENTER);
		Debuter.setText("Débuter");
		Debuter.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		Debuter.setHorizontalTextPosition(SwingConstants.CENTER);
		Debuter.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				DebuterMouseClicked(evt);
			}
		});
		getContentPane().add(Debuter, new org.netbeans.lib.awtextra.AbsoluteConstraints(671, 193, 110, 31));

		Redemarrer.setHorizontalAlignment(SwingConstants.CENTER);
		Redemarrer.setText("Redémarrer");
		Redemarrer.setHorizontalTextPosition(SwingConstants.CENTER);
		Redemarrer.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				RedemarrerMouseClicked(evt);
			}
		});
		getContentPane().add(Redemarrer, new org.netbeans.lib.awtextra.AbsoluteConstraints(811, 193, 110, 31));

		jTextField1.setColumns(1);
		jTextField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});
		getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, 36, -1));

		jTextField2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField2ActionPerformed(evt);
			}
		});
		getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 130, 36, -1));

		Congestion.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
		Congestion.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				CongestionMouseClicked(evt);
			}
		});
		getContentPane().add(Congestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 550, 270, 40));

		Fluide.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
		Fluide.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				FluideMouseClicked(evt);
			}
		});
		getContentPane().add(Fluide, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, 270, 40));

		GH.setForeground(new java.awt.Color(255, 255, 255));
		GH.setIcon(new ImageIcon("Visual/Images/GH.png")); // NOI18N
		getContentPane().add(GH, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 434, -1, 20));

		HD.setIcon(new ImageIcon("Visual/Images/HD.png")); // NOI18N
		getContentPane().add(HD, new org.netbeans.lib.awtextra.AbsoluteConstraints(856, 440, -1, 10));

		CD.setIcon(new ImageIcon("Visual/Images/CD.png")); // NOI18N
		getContentPane().add(CD, new org.netbeans.lib.awtextra.AbsoluteConstraints(847, 363, -1, 75));

		BC.setIcon(new ImageIcon("Visual/Images/BC.png")); // NOI18N
		getContentPane().add(BC, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 357, -1, 10));

		CH.setIcon(new ImageIcon("Visual/Images/BG.png")); // NOI18N
		getContentPane().add(CH, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 370, -1, -1));

		BG.setIcon(new ImageIcon("Visual/Images/CH.png")); // NOI18N
		getContentPane().add(BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 368, -1, -1));

		AG.setIcon(new ImageIcon("Visual/Images/AG.png")); // NOI18N
		getContentPane().add(AG, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 437, -1, -1));

		AB.setIcon(new ImageIcon("Visual/Images/AB.png")); // NOI18N
		getContentPane().add(AB, new org.netbeans.lib.awtextra.AbsoluteConstraints(672, 360, -1, -1));

		FE.setIcon(new ImageIcon("Visual/Images/FE.png")); // NOI18N
		getContentPane().add(FE, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 535, -1, -1));

		AF.setHorizontalAlignment(SwingConstants.RIGHT);
		AF.setIcon(new ImageIcon("Visual/Images/AF.png")); // NOI18N
		getContentPane().add(AF, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 448, 110, -1));

		GF.setIcon(new ImageIcon("Visual/Images/GF.png")); // NOI18N
		getContentPane().add(GF, new org.netbeans.lib.awtextra.AbsoluteConstraints(739, 449, -1, -1));

		HE.setIcon(new ImageIcon("Visual/Images/HE.png")); // NOI18N
		getContentPane().add(HE, new org.netbeans.lib.awtextra.AbsoluteConstraints(838, 450, -1, -1));

		ED.setHorizontalAlignment(SwingConstants.RIGHT);
		ED.setIcon(new ImageIcon("Visual/Images/ED.png")); // NOI18N
		getContentPane().add(ED, new org.netbeans.lib.awtextra.AbsoluteConstraints(832, 438, 90, -1));

		nextStep.setHorizontalAlignment(SwingConstants.CENTER);
		nextStep.setText("Prochaine Étape");
		nextStep.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				nextStepMouseClicked(evt);
			}
		});
		getContentPane().add(nextStep, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 250, 110, 30));

		face_BG.setIcon(new ImageIcon("Visual/Images/Interface/BG.png")); // NOI18N
		getContentPane().add(face_BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 107, -1, -1));

		face_AG.setIcon(new ImageIcon("Visual/Images/Interface/AG.png")); // NOI18N
		getContentPane().add(face_AG, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 257, 130, -1));

		face_AG1.setIcon(new ImageIcon("Visual/Images/Interface/AG1.png")); // NOI18N
		getContentPane().add(face_AG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 247, -1, -1));

		face_BG1.setIcon(new ImageIcon("Visual/Images/Interface/BG1.png")); // NOI18N
		getContentPane().add(face_BG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 100, -1, -1));

		face_AB.setIcon(new ImageIcon("Visual/Images/Interface/AB.png")); // NOI18N
		getContentPane().add(face_AB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 88, 150, 150));

		face_AB1.setIcon(new ImageIcon("Visual/Images/Interface/AB1.png")); // NOI18N
		getContentPane().add(face_AB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 79, 160, 170));

		face_AF1.setIcon(new ImageIcon("Visual/Images/Interface/AF1.png")); // NOI18N
		getContentPane().add(face_AF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 268, -1, -1));

		face_AF.setIcon(new ImageIcon("Visual/Images/Interface/AF.png")); // NOI18N
		getContentPane().add(face_AF, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 272, -1, -1));

		face_BC.setIcon(new ImageIcon("Visual/Images/Interface/BC.png")); // NOI18N
		getContentPane().add(face_BC, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 81, -1, -1));

		face_BC1.setIcon(new ImageIcon("Visual/Images/Interface/BC1.png")); // NOI18N
		getContentPane().add(face_BC1, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 65, -1, 20));

		face_GH1.setIcon(new ImageIcon("Visual/Images/Interface/GH1.png")); // NOI18N
		getContentPane().add(face_GH1, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 246, -1, -1));

		face_GH.setIcon(new ImageIcon("Visual/Images/Interface/GH.png")); // NOI18N
		getContentPane().add(face_GH, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 258, -1, -1));

		face_CD.setIcon(new ImageIcon("Visual/Images/Interface/CD.png")); // NOI18N
		getContentPane().add(face_CD, new org.netbeans.lib.awtextra.AbsoluteConstraints(434, 92, -1, -1));

		face_CD1.setIcon(new ImageIcon("Visual/Images/Interface/CD1.png")); // NOI18N
		getContentPane().add(face_CD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 84, -1, -1));

		face_HD1.setIcon(new ImageIcon("Visual/Images/Interface/HD1.png")); // NOI18N
		getContentPane().add(face_HD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 241, -1, 20));

		face_HD.setIcon(new ImageIcon("Visual/Images/Interface/HD.png")); // NOI18N
		getContentPane().add(face_HD, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 254, -1, 20));

		face_FE1.setIcon(new ImageIcon("Visual/Images/Interface/FE1.png")); // NOI18N
		getContentPane().add(face_FE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 451, -1, -1));

		face_FE.setIcon(new ImageIcon("Visual/Images/Interface/FE.png")); // NOI18N
		getContentPane().add(face_FE, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 461, -1, 20));

		face_CH1.setIcon(new ImageIcon("Visual/Images/Interface/CH1.png")); // NOI18N
		getContentPane().add(face_CH1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 101, -1, -1));

		face_ED1.setIcon(new ImageIcon("Visual/Images/Interface/DE1.png")); // NOI18N
		getContentPane().add(face_ED1, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 244, -1, -1));

		face_ED.setIcon(new ImageIcon("Visual/Images/Interface/DE.png")); // NOI18N
		getContentPane().add(face_ED, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 236, -1, -1));

		face_CH.setIcon(new ImageIcon("Visual/Images/Interface/CH.png")); // NOI18N
		getContentPane().add(face_CH, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 101, 60, -1));

		face_HE.setIcon(new ImageIcon("Visual/Images/Interface/HE.png")); // NOI18N
		getContentPane().add(face_HE, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 276, -1, -1));

		face_HE1.setIcon(new ImageIcon("Visual/Images/Interface/HE1.png")); // NOI18N
		getContentPane().add(face_HE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 275, -1, -1));

		face_GF.setIcon(new ImageIcon("Visual/Images/Interface/GF.png")); // NOI18N
		getContentPane().add(face_GF, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 276, -1, -1));

		face_GF1.setIcon(new ImageIcon("Visual/Images/Interface/GF1.png")); // NOI18N
		getContentPane().add(face_GF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(213, 274, -1, -1));

		GH.setVisible(false);
		HD.setVisible(false);
		CD.setVisible(false);
		BC.setVisible(false);
		BG.setVisible(false);
		CH.setVisible(false);
		AG.setVisible(false);
		AB.setVisible(false);
		FE.setVisible(false);
		AF.setVisible(false);
		GF.setVisible(false);
		HE.setVisible(false);
		ED.setVisible(false);

		face_BG.setVisible(false);
		face_AG.setVisible(false);
		face_AG1.setVisible(false);
		face_BG1.setVisible(false);
		face_AB.setVisible(false);
		face_AB1.setVisible(false);
		face_AF1.setVisible(false);
		face_AF.setVisible(false);
		face_BC.setVisible(false);
		face_BC1.setVisible(false);
		face_GH1.setVisible(false);
		face_GH.setVisible(false);
		face_CD.setVisible(false);
		face_CD1.setVisible(false);
		face_HD1.setVisible(false);
		face_HD.setVisible(false);
		face_FE1.setVisible(false);
		face_FE.setVisible(false);
		face_CH1.setVisible(false);
		face_ED1.setVisible(false);
		face_ED.setVisible(false);
		face_CH.setVisible(false);
		face_HE.setVisible(false);
		face_HE1.setVisible(false);
		face_GF.setVisible(false);
		face_GF1.setVisible(false);

		control = new Controleur();
		pack();
	}// </editor-fold>

	private int conversionNoeudEntier(char c) {
		if (c >= 'A' && c <= 'H') {
			return c - 65;
		}
		return -1;
	}

	private char conversionNoeudCaractere(int b) {
		if (b >= 0 && b <= 7) {
			return (char) (b + 65);
		}
		return 'Z';
	}

	private void dessinerChemin(char debut, char fin) {

		if (debut == 'A' && fin == 'B' || debut == 'B' && fin == 'A') {
			AB.setVisible(true);
		}
		if (debut == 'A' && fin == 'G' || debut == 'G' && fin == 'A') {
			AG.setVisible(true);
		}
		if (debut == 'A' && fin == 'F' || debut == 'F' && fin == 'A') {
			AF.setVisible(true);
		}
		if (debut == 'B' && fin == 'C' || debut == 'C' && fin == 'B') {
			BC.setVisible(true);
		}
		if (debut == 'G' && fin == 'H' || debut == 'H' && fin == 'G') {
			GH.setVisible(true);
		}
		if (debut == 'F' && fin == 'E' || debut == 'E' && fin == 'F') {
			FE.setVisible(true);
		}
		if (debut == 'C' && fin == 'D' || debut == 'D' && fin == 'C') {
			CD.setVisible(true);
		}
		if (debut == 'H' && fin == 'D' || debut == 'D' && fin == 'H') {
			HD.setVisible(true);
		}
		if (debut == 'E' && fin == 'D' || debut == 'D' && fin == 'E') {
			ED.setVisible(true);
		}
		if (debut == 'B' && fin == 'G' || debut == 'G' && fin == 'B') {
			BG.setVisible(true);
		}
		if (debut == 'G' && fin == 'F' || debut == 'F' && fin == 'G') {
			GF.setVisible(true);
		}
		if (debut == 'C' && fin == 'H' || debut == 'H' && fin == 'C') {
			CH.setVisible(true);
		}
		if (debut == 'H' && fin == 'E' || debut == 'E' && fin == 'H') {
			HE.setVisible(true);
		}

	}

	public void ClearItineraire() {
		GH.setVisible(false);
		HD.setVisible(false);
		CD.setVisible(false);
		BC.setVisible(false);
		BG.setVisible(false);
		CH.setVisible(false);
		AG.setVisible(false);
		AB.setVisible(false);
		FE.setVisible(false);
		AF.setVisible(false);
		GF.setVisible(false);
		HE.setVisible(false);
		ED.setVisible(false);
	}

	public void dessinerTraffic(EtatRoute[] listeEtat) {
		System.out.println("Route 0: "+listeEtat[0]);
		switch (listeEtat[0]) {
		case FLUIDE:
			face_AB1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_AB1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_AB1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 1: "+listeEtat[1]);
		switch (listeEtat[1]) {
		case FLUIDE:
			face_AG.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_AG.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_AG.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 2: "+listeEtat[2]);
		switch (listeEtat[2]) {
		case FLUIDE:
			face_AF.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_AF.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_AF.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 3: "+listeEtat[3]);
		switch (listeEtat[3]) {
		case FLUIDE:
			face_AB.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_AB.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_AB.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 4: "+listeEtat[4]);
		switch (listeEtat[4]) {
		case FLUIDE:
			face_BC.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_BC.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_BC.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 5: "+listeEtat[5]);
		switch (listeEtat[5]) {
		case FLUIDE:
			face_BG.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_BG.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_BG.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 6: "+listeEtat[6]);
		switch (listeEtat[6]) {
		case FLUIDE:
			face_BC1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_BC1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_BC1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 7: "+listeEtat[7]);
		switch (listeEtat[7]) {
		case FLUIDE:
			face_CH.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_CH.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_CH.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 8: "+listeEtat[8]);
		switch (listeEtat[8]) {
		case FLUIDE:
			face_CD.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_CD.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_CD.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 9: "+listeEtat[9]);
		switch (listeEtat[9]) {
		case FLUIDE:
			face_CD1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_CD1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_CD1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 10: "+listeEtat[10]);
		switch (listeEtat[10]) {
		case FLUIDE:
			face_HD1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_HD1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_HD1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 11: "+listeEtat[11]);
		switch (listeEtat[11]) {
		case FLUIDE:
			face_ED.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_ED.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_ED.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 12: "+listeEtat[12]);
		switch (listeEtat[12]) {
		case FLUIDE:
			face_FE1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_FE1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_FE1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 13: "+listeEtat[13]);
		switch (listeEtat[13]) {
		case FLUIDE:
			face_HE1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_HE1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_HE1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 14: "+listeEtat[14]);
		switch (listeEtat[14]) {
		case FLUIDE:
			face_ED1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_ED1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_ED1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 15: "+listeEtat[15]);
		switch (listeEtat[15]) {
		case FLUIDE:
			face_AF1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_AF1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_AF1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 16: "+listeEtat[16]);
		switch (listeEtat[16]) {
		case FLUIDE:
			face_GF1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_GF1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_GF1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 17: "+listeEtat[17]);
		switch (listeEtat[17]) {
		case FLUIDE:
			face_FE.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_FE.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_FE.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 18: "+listeEtat[18]);
		switch (listeEtat[18]) {
		case FLUIDE:
			face_AG1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_AG1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_AG1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 19: "+listeEtat[19]);
		switch (listeEtat[19]) {
		case FLUIDE:
			face_BG1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_BG1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_BG1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 20: "+listeEtat[20]);
		switch (listeEtat[20]) {
		case FLUIDE:
			face_GF.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_GF.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_GF.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 21: "+listeEtat[21]);
		switch (listeEtat[21]) {
		case FLUIDE:
			face_GH.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_GH.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_GH.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 22: "+listeEtat[22]);
		switch (listeEtat[22]) {
		case FLUIDE:
			face_CH1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_CH1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_CH1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 23: "+listeEtat[23]);
		switch (listeEtat[23]) {
		case FLUIDE:
			face_HD.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_HD.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_HD.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 24: "+listeEtat[24]);
		switch (listeEtat[24]) {
		case FLUIDE:
			face_HE.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_HE.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_HE.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}
		System.out.println();
		System.out.println("Route 25: "+listeEtat[25]);
		switch (listeEtat[25]) {
		case FLUIDE:
			face_GH1.setVisible(false);
			// System.out.println("Fluide");
			break;
		case CONGESTION:
			face_GH1.setVisible(true);
			// face_AB.setText("Congestion");
			System.out.println("Congestion");
			break;
		case ACCIDENT:
			face_GH1.setVisible(true);
			// face_AB.setText("Accident");
			System.out.println("Accident");
			break;

		}

	}

	private void DebuterMouseClicked(java.awt.event.MouseEvent evt) {
		Depart = jTextField1.getText().charAt(0);
		Arrive = jTextField2.getText().charAt(0);

		control.demarrer(conversionNoeudEntier(Depart), conversionNoeudEntier(Arrive));
		ClearItineraire();
		dessinerTraffic(control.getEtatRoutes());
		ArrayList<Route> itineraire = control.getItineraire();
		for (int i = 0; i < itineraire.size(); i++) {
			dessinerChemin(conversionNoeudCaractere(itineraire.get(i).getNoeud(0)),
					conversionNoeudCaractere(itineraire.get(i).getNoeud(1)));
		}
	}

	private void RedemarrerMouseClicked(java.awt.event.MouseEvent evt) {
		/*
		 * JFrame frame = new JFrame(); JOptionPane.showMessageDialog(frame,
		 * "Eggs are not supposed to be RedÃ©marrer.");
		 */

		System.out.println(conversionNoeudCaractere(52));
	}

	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
		Depart = jTextField1.getText().charAt(0);

	}

	private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {
		Arrive = jTextField2.getText().charAt(0);
	}

	private void FluideMouseClicked(java.awt.event.MouseEvent evt) {
		JFrame frame = new JFrame();
		JOptionPane.showMessageDialog(frame, "Eggs are not supposed to be Circulation Fluide.");
	}

	private void CongestionMouseClicked(java.awt.event.MouseEvent evt) {
		JFrame frame = new JFrame();
		JOptionPane.showMessageDialog(frame, "Eggs are not supposed to be Circulation Fluide.");
	}

	private void nextStepMouseClicked(java.awt.event.MouseEvent evt) {
		JFrame frame = new JFrame();
		JOptionPane.showMessageDialog(frame, "Next Step // Prochaine Étape");
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String[] args) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainUI().setVisible(true);
			}
		});
	}

	Controleur control;
	char Depart;
	char Arrive;
	// Variables declaration - do not modify
	private JLabel AB;
	private JLabel AF;
	private JLabel AG;
	private JLabel BC;
	private JLabel BG;
	private JLabel CD;
	private JLabel CH;
	private JLabel Congestion;
	private JLabel Debuter;
	private JLabel ED;
	private JLabel FE;
	private JLabel Fluide;
	private JLabel GF;
	private JLabel GH;
	private JLabel HD;
	private JLabel HE;
	private JLabel Redemarrer;
	private JLabel face_AB;
	private JLabel face_AB1;
	private JLabel face_AF;
	private JLabel face_AF1;
	private JLabel face_AG;
	private JLabel face_AG1;
	private JLabel face_BC;
	private JLabel face_BC1;
	private JLabel face_BG;
	private JLabel face_BG1;
	private JLabel face_CD;
	private JLabel face_CD1;
	private JLabel face_CH;
	private JLabel face_CH1;
	private JLabel face_ED;
	private JLabel face_ED1;
	private JLabel face_FE;
	private JLabel face_FE1;
	private JLabel face_GF;
	private JLabel face_GF1;
	private JLabel face_GH;
	private JLabel face_GH1;
	private JLabel face_HD;
	private JLabel face_HD1;
	private JLabel face_HE;
	private JLabel face_HE1;
	private JTextField jTextField1;
	private JTextField jTextField2;
	private JLabel nextStep;

	// End of variables declaration
}
